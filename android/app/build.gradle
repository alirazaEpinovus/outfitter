// def localProperties = new Properties()
// def localPropertiesFile = rootProject.file('local.properties')
// if (localPropertiesFile.exists()) {
//     localPropertiesFile.withReader('UTF-8') { reader ->
//         localProperties.load(reader)
//     }
// }

// def flutterRoot = localProperties.getProperty('flutter.sdk')
// if (flutterRoot == null) {
//     throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
// }

// def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
// if (flutterVersionCode == null) {
//     flutterVersionCode = '1'
// }

// def flutterVersionName = localProperties.getProperty('flutter.versionName')
// if (flutterVersionName == null) {
//     flutterVersionName = '1.0'
// }

// apply plugin: 'com.android.application'
// apply plugin: 'kotlin-android'
// apply plugin: 'io.fabric'
// apply plugin: 'com.google.gms.google-services'
// apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

// def keystoreProperties = new Properties()
//    def keystorePropertiesFile = rootProject.file('key.properties')
//    if (keystorePropertiesFile.exists()) {
//        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
//    } 

// android {
//     compileSdkVersion 31
//     lintOptions {
//         checkReleaseBuilds false
//         abortOnError false
//         ignoreWarnings true //false
//     }


//     sourceSets {
//         main.java.srcDirs += 'src/main/kotlin'
//     }

//     lintOptions {
//         disable 'InvalidPackage'
//     }

//     defaultConfig {
//         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//         applicationId "com.alchemative.outfitters.pk"
//         minSdkVersion 21
//         targetSdkVersion 33
//         multiDexEnabled true
//         versionCode 41
//         versionName "13.2"
//         testInstrumentationRunner "android.test.runner.AndroidJUnitRunner" }


//        signingConfigs {
//        release {
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
//            storePassword keystoreProperties['storePassword']
//        }
//        }
//     buildTypes {
//        release {
//            signingConfig signingConfigs.release
//            minifyEnabled true
//            useProguard true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro' 
//        }
//    }

//     // buildTypes {
//     //     release {
//     //         // TODO: Add your own signing config for the release build.
//     //         // Signing with the debug keys for now, so `flutter run --release` works.
//     //         signingConfig signingConfigs.debug
//     //     }
//     // }
// }

// flutter {
//     source '../..'
// }

// dependencies {
//     implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//     testImplementation 'junit:junit:4.12'
//     implementation 'com.android.support:multidex:1.0.3'
//     implementation "com.google.firebase:firebase-messaging:20.1.0"
//     implementation 'com.google.firebase:firebase-analytics:17.5.0'
//     androidTestImplementation 'androidx.test:runner:1.1.1'
//     androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
// }
// apply plugin: 'com.google.gms.google-services'
// apply plugin: 'io.fabric'
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
def keystoreProperties = new Properties()
   def keystorePropertiesFile = rootProject.file('key.properties')
   if (keystorePropertiesFile.exists()) {
       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
   } 
android {
    compileSdkVersion 33

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        // Sets Java compatibility to Java 8
        // sourceCompatibility JavaVersion.VERSION_1_8
      }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
           applicationId "com.alchemative.outfitters.pk"
        minSdkVersion 21
        targetSdkVersion 33
        multiDexEnabled true
         versionCode 41
         versionName "13.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

       signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
   }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
        }
    }
    lint {
        disable 'InvalidPackage'
    }
    lintOptions {
        checkReleaseBuilds false
    }
    namespace 'com.alchemative.outfitters.pk'
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:multidex:1.0.3'
    implementation platform('com.google.firebase:firebase-bom') // add this
    implementation 'com.google.firebase:firebase-messaging:23.0.0'
    implementation 'com.google.firebase:firebase-iid:21.1.0' // a    implementation 'com.google.firebase:firebase-analytics:17.5.0'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'
